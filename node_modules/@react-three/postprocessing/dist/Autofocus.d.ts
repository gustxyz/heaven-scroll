import * as THREE from 'three';
import React, { RefObject } from 'react';
import { DepthOfFieldEffect } from 'postprocessing';
import { DepthOfField } from './index';
export type AutofocusProps = typeof DepthOfField & {
    target?: [number, number, number];
    mouse?: boolean;
    debug?: number;
    manual?: boolean;
    smoothTime?: number;
};
export type AutofocusApi = {
    dofRef: RefObject<DepthOfFieldEffect>;
    hitpoint: THREE.Vector3;
    update: (delta: number, updateTarget: boolean) => void;
};
export declare const Autofocus: React.ForwardRefExoticComponent<React.ForwardRefExoticComponent<{
    blendFunction?: import("postprocessing").BlendFunction | undefined;
    worldFocusDistance?: number | undefined;
    worldFocusRange?: number | undefined;
    focusDistance?: number | undefined;
    focalLength?: number | undefined;
    focusRange?: number | undefined;
    bokehScale?: number | undefined;
    resolutionScale?: number | undefined;
    resolutionX?: number | undefined;
    resolutionY?: number | undefined;
    width?: number | undefined;
    height?: number | undefined;
} & Partial<{
    target: import("@react-three/fiber").Vector3;
    depthTexture: {
        texture: THREE.Texture;
        packing: number;
    };
    blur: number;
}> & React.RefAttributes<DepthOfFieldEffect>> & {
    target?: [number, number, number] | undefined;
    mouse?: boolean | undefined;
    debug?: number | undefined;
    manual?: boolean | undefined;
    smoothTime?: number | undefined;
} & React.RefAttributes<AutofocusApi>>;
